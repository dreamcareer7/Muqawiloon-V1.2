// Fonts

@mixin font-regular {
  font-weight: 400;
  font-style: normal;

  .ltr & {
    font-family: 'Open Sans', -apple-system,BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;
  }

  .rtl & {
    font-family: 'hacen-regular', -apple-system,BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;
  }
}

@mixin font-bold {
  font-weight: 600;
  font-style: normal;

  .ltr & {
    font-family: 'Open Sans', -apple-system,BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;
  }

  .rtl & {
    font-family: 'hacen-bold', -apple-system,BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", sans-serif;
    font-weight: 600;
  }
}


// Media queries

@mixin mq($size) {
  @if $size == x-large {
    @media (min-width: $x-large) { @content ; }
  }

  @if $size == large-down {
    @media (max-width: $large - 1) { @content ; }
  }

  @if $size == large-only {
    @media (min-width: $large) and (max-width: $x-large - 1) { @content ; }
  }

  @if $size == large {
    @media (min-width: $large) { @content ; }
  }

  @if $size == medium {
    @media (min-width: $medium) { @content ; }
  }

  @if $size == medium-only {
    @media (min-width: $medium) and (max-width: $large - 1) { @content ; }
  }

  @if $size == medium-down {
    @media (max-width: $medium - 1) { @content ; }
  }

  @if $size == small {
    @media (min-width: $small) { @content ; }
  }

  @if $size == small-down {
    @media (max-width: $small - 1) { @content ; }
  }

  @if $size == xsmall-only {
    @media (max-width: $small - 1) { @content ; }
  }
}

@mixin rtl {
  .rtl & {
    @content;
  }
}

@mixin ltr {
  .ltr & {
    @content;
  }
}


// Visually hidden

@mixin visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}


// Drop shadow

@mixin drop-shadow {
  box-shadow: 0px 1px 2px 0px rgba($grey-dark, 0.2);
}

// Font Sizes

@mixin font-size($fs-map) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      font-size: $fs-font-size;
    }
    @else {
      @media screen and (min-width: $fs-breakpoint) {
        font-size: $fs-font-size;
      }
    }
  }
}


// Center vertically

@mixin v-center($position: relative) {
  position: $position;
  top: 50%;
  transform: translate3d(0, -50%, 0);
}


// Vertical padding

@mixin vertical-padding($padding) {
  padding-top: $padding;
  padding-bottom: $padding;
}


// Black overlay

@mixin gradient-overlay {
  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(0deg, rgba($black, 0.5) 0%, rgba($black, 0) 100%);
  }
}

@mixin black-overlay {
  &:before {
   content: "";
   display: block;
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   background-color: rgba($black, 0.4); 
  }
}